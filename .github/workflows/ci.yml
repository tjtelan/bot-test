name: CI

on:
  push:
    branches:
      - staging
      - trying
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}


jobs:
  generate_changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: 8BitJonny/gh-get-current-pr@2.1.0
        id: PR


      #- name: my-app-install token
      #  id: my-app
      #  uses: getsentry/action-github-app-token@v1
      #  with:
      #    app_id: ${{ secrets.APP_ID }}
      #    private_key: ${{ secrets.APP_PRIVATE_KEY }}
      #- name: Checkout repo
      #  uses: actions/checkout@v3
      #  with:
      #    repository: tjtelan/bot-test
      #    token: ${{ steps.my-app.outputs.token }}
      
      - name: Configure git user 
        run: |
          git status
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      #- name: Add updates and rewrite commit message to branch ${{ env.GIT_BRANCH_NAME }}
      #  run: |
      #    git reset --soft HEAD~1

      #    # This add is important in event CHANGELOG.md doesn't exist
      #    git add CHANGELOG.md

      #    # Warn: github.event.head_commit.message empty if job started via workflow_dispatch
      #    git commit --all --message "${{ github.event.head_commit.message }}

      #    Update CHANGELOG.md and/or MSRV badge from Github Actions
      #    [actions skip]"
      #    git status
      #    git log -5

      - name: Perform merge
        env:
          prTitle: ${{ steps.PR.outputs.pr_title }}  
          prNumber: ${{ steps.PR.outputs.number }}
        run: |
          git reset HEAD~1 --hard
          git branch for-the-changelog
          git checkout "$DEFAULT_BRANCH"
          git status
          git merge for-the-changelog -m "${prTitle} (#${prNumber})"
          git log -5


      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG-generated.md
      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"
      - name: Upload generated CHANGELOG
        uses: actions/upload-artifact@v2
        with:
          name: CHANGELOG-generated 
          path: CHANGELOG-generated.md
          retention-days: 1
  done:
    name: Done
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    needs: 
      - generate_changelog
    runs-on: ubuntu-latest
    steps:





      - name: Done
        run: echo "Done!"
